# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.

akka {

  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.Logging$DefaultLogger", "akka.event.slf4j.Slf4jLogger"]

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "WARNING"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  stdout-loglevel = "WARNING"

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = on

  # Filter of log events that is used by the LoggingAdapter before
  # publishing log events to the eventStream.
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    # provider = "akka.cluster.ClusterActorRefProvider"

    # default-dispatcher {
    # Throughput for default Dispatcher, set to 1 for as fair as possible
    #  throughput = 10
    # }
    # capping default-dispatcher for demonstration purposes
    default-dispatcher {
      fork-join-executor {
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 2
      }
    }

    debug {
      # enable function of LoggingReceive, which is to log any received message at
      # DEBUG level
      receive = on
      unhandled = on
      fsm = on
    }
  }

  remote {
    # The port clients should connect to. Default is 2552.
    netty.tcp.port = 2552
  }
}